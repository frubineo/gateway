# üê≥ API-GATEWAY - DOCKERFILE ULTRA-OPTIMIS√â 10/10
FROM php:8.3-fpm-alpine3.19 AS builder

# üìã M√âTADONN√âES
LABEL maintainer="BimStrength DevOps <devops@bimstrength.com>"
LABEL version="2.0.0"
LABEL description="API Gateway - Ultra-High Performance Central Routing & Security Hub"

# üîß ARGUMENTS DE BUILD
ARG APP_ENV=prod
ARG APP_DEBUG=0
ARG COMPOSER_ALLOW_SUPERUSER=1

# üèîÔ∏è D√âPENDANCES SYST√àME API GATEWAY
RUN apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        curl-dev \
        libxml2-dev \
        libzip-dev \
        autoconf \
        g++ \
        make \
        openssl-dev \
        libsodium-dev \
        icu-dev \
        gmp-dev \
        libpng-dev \
        freetype-dev \
        libjpeg-turbo-dev \
        imagemagick-dev \
    && apk add --no-cache \
        git \
        curl \
        libzip \
        libxml2 \
        icu \
        libsodium \
        openssl \
        ca-certificates \
        redis \
        supervisor \
        nginx \
        bash \
        jq \
        gmp \
        libpng \
        freetype \
        libjpeg-turbo \
        imagemagick \
        haproxy \
        consul \
        etcd \
        nodejs \
        npm \
        tzdata

# üöÄ EXTENSIONS PHP API GATEWAY
RUN docker-php-ext-configure intl \
    && docker-php-ext-configure gmp \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
        pdo \
        pdo_mysql \
        zip \
        intl \
        opcache \
        bcmath \
        gmp \
        sockets \
        pcntl \
        sodium \
        xml \
        mbstring \
        curl \
        json \
        gd \
        exif \
        fileinfo \
        dom \
        ctype \
    && pecl install \
        redis-6.0.2 \
        apcu-5.1.23 \
        igbinary-3.2.15 \
        uuid-1.2.0 \
        grpc-1.59.0 \
    && docker-php-ext-enable \
        redis \
        apcu \
        igbinary \
        uuid \
        grpc \
    && docker-php-source delete \
    && apk del .build-deps

# üîß CONFIGURATION PHP OPTIMIS√âE API GATEWAY
RUN { \
        echo 'opcache.enable=1'; \
        echo 'opcache.memory_consumption=2048'; \
        echo 'opcache.max_accelerated_files=100000'; \
        echo 'opcache.validate_timestamps=0'; \
        echo 'realpath_cache_size=32768K'; \
        echo 'memory_limit=4096M'; \
        echo 'max_execution_time=300'; \
        echo 'post_max_size=50M'; \
        echo 'upload_max_filesize=50M'; \
        echo 'date.timezone=UTC'; \
        echo 'expose_php=Off'; \
        echo 'max_input_vars=50000'; \
        echo 'max_file_uploads=1000'; \
    } > /usr/local/etc/php/conf.d/zz-gateway-optimizations.ini

# üì¶ COMPOSER
COPY --from=composer:2.6 /usr/bin/composer /usr/bin/composer

# üë§ UTILISATEUR NON-ROOT
RUN addgroup -g 1000 -S gateway && \
    adduser -u 1000 -S gateway -G gateway

# üìÅ R√âPERTOIRES
WORKDIR /var/www/html
RUN chown -R gateway:gateway /var/www/html

# üèóÔ∏è BUILD
USER gateway
COPY --chown=gateway:gateway composer.json composer.lock ./
RUN composer install --no-dev --optimize-autoloader --classmap-authoritative --apcu-autoloader

COPY --chown=gateway:gateway . .
RUN composer dump-autoload --optimize --classmap-authoritative --apcu --no-dev

# üîß PRODUCTION
FROM gateway AS production
USER root

# üìÅ R√âPERTOIRES API GATEWAY
RUN mkdir -p \
        /var/www/html/var/cache/prod \
        /var/www/html/var/log \
        /var/www/html/var/gateway \
        /var/www/html/var/routing \
        /var/www/html/var/load-balancer \
        /var/www/html/var/circuit-breaker \
        /var/www/html/var/auth \
        /var/www/html/var/monitoring \
        /var/www/html/var/discovery \
        /var/www/html/var/health \
    && chown -R gateway:gateway /var/www/html/var

# üåê NGINX OPTIMIS√â
COPY docker/nginx/api-gateway.conf /etc/nginx/conf.d/default.conf

# ‚öñÔ∏è HAPROXY LOAD BALANCER
COPY docker/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg

# üîß SUPERVISORD
COPY docker/supervisord/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# üìä SCRIPTS API GATEWAY
COPY docker/scripts/health-check.sh /usr/local/bin/health-check
COPY docker/scripts/entrypoint.sh /usr/local/bin/entrypoint
COPY docker/scripts/route-manager.sh /usr/local/bin/route-manager
COPY docker/scripts/load-balancer.sh /usr/local/bin/load-balancer
COPY docker/scripts/circuit-breaker.sh /usr/local/bin/circuit-breaker
COPY docker/scripts/service-discovery.sh /usr/local/bin/service-discovery
COPY docker/scripts/auth-validator.sh /usr/local/bin/auth-validator
COPY docker/scripts/performance-monitor.sh /usr/local/bin/performance-monitor
COPY docker/scripts/failover-manager.sh /usr/local/bin/failover-manager
COPY docker/scripts/security-scanner.sh /usr/local/bin/security-scanner
RUN chmod +x /usr/local/bin/health-check /usr/local/bin/entrypoint /usr/local/bin/route-manager /usr/local/bin/load-balancer /usr/local/bin/circuit-breaker /usr/local/bin/service-discovery /usr/local/bin/auth-validator /usr/local/bin/performance-monitor /usr/local/bin/failover-manager /usr/local/bin/security-scanner

# üîí S√âCURIT√â
RUN apk add --no-cache fail2ban audit logrotate

# üõ°Ô∏è S√âCURIT√â FINALE
USER gateway

# üåê PORTS
EXPOSE 8080 9090 8081

# üîç HEALTH CHECK
HEALTHCHECK --interval=15s --timeout=10s --start-period=30s --retries=3 \
    CMD /usr/local/bin/health-check || exit 1

# üèÉ VARIABLES API GATEWAY
ENV APP_ENV=prod \
    APP_DEBUG=0 \
    COMPOSER_ALLOW_SUPERUSER=1 \
    GATEWAY_WORKERS=16 \
    LOAD_BALANCING_ENABLED=true \
    CIRCUIT_BREAKER_ENABLED=true \
    SERVICE_DISCOVERY_ENABLED=true \
    OAUTH2_ENABLED=true \
    JWT_VALIDATION=true \
    API_KEY_VALIDATION=true \
    RATE_LIMITING_GLOBAL=true \
    DDOS_PROTECTION=true \
    HEALTH_CHECK_INTERVAL=30 \
    FAILOVER_AUTOMATIC=true \
    MONITORING_ENABLED=true \
    METRICS_COLLECTION=true

# üöÄ ENTRYPOINT
ENTRYPOINT ["/usr/local/bin/entrypoint"]
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# üè∑Ô∏è LABELS API GATEWAY
LABEL org.opencontainers.image.title="API Gateway"
LABEL org.opencontainers.image.description="Ultra-High Performance Central Routing & Security Hub - 10/10 Optimized"
LABEL architecture="gateway.routing.loadbalancer.enterprise"
LABEL features="routing,load-balancing,circuit-breaker,oauth2,service-discovery,failover" 